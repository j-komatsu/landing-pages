// LINEÁôªÈå≤LP JavaScriptÔºàÈÅä„Å≥ÂøÉÔºãÂãï„Åç„ÅÆ„ÅÇ„Çã„É¢„ÉÄ„É≥ÂûãÔºâ
// GSAP„ÉªSwiper„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥„Éª„Çø„ÉñÂàáÊõø„ÉªFAQ„Ç¢„Ç≥„Éº„Éá„Ç£„Ç™„É≥Ê©üËÉΩ„ÇíÂÆüË£Ö

document.addEventListener('DOMContentLoaded', function() {
    // ÂàùÊúüÂåñÂá¶ÁêÜ
    initializeApp();
});

/**
 * „Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅÆÂàùÊúüÂåñ
 */
function initializeApp() {
    setupGSAPAnimations();
    setupSwiperSliders();
    setupTabSwitching();
    setupFAQAccordion();
    setupSmoothScroll();
    setupScrollAnimations();
    setupHoverEffects();
    setupFixedCTA();
    setupParallaxEffects();
    
    console.log('üéâ LINEÁôªÈå≤LP JavaScript ÂàùÊúüÂåñÂÆå‰∫ÜÔºÅ');
}

/**
 * GSAP „Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥Ë®≠ÂÆö
 */
function setupGSAPAnimations() {
    // GSAP„ÅÆÁôªÈå≤
    gsap.registerPlugin(ScrollTrigger);
    
    // „Éò„ÉÉ„ÉÄ„Éº„ÅÆË°®Á§∫„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥
    gsap.from('.header', {
        duration: 1,
        y: -100,
        opacity: 0,
        ease: 'power3.out'
    });
    
    // „Éí„Éº„É≠„Éº„Çª„ÇØ„Ç∑„Éß„É≥„ÅÆ„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥
    const heroTimeline = gsap.timeline();
    heroTimeline
        .from('.hero-title .title-line', {
            duration: 1,
            x: -100,
            opacity: 0,
            stagger: 0.2,
            ease: 'power3.out'
        })
        .from('.hero-title .title-emphasis', {
            duration: 0.8,
            scale: 0,
            opacity: 0,
            ease: 'back.out(1.7)'
        }, '-=0.5')
        .from('.hero-subtitle', {
            duration: 0.8,
            y: 50,
            opacity: 0,
            ease: 'power2.out'
        }, '-=0.3')
        .from('.feature-item', {
            duration: 0.6,
            y: 30,
            opacity: 0,
            stagger: 0.1,
            ease: 'power2.out'
        }, '-=0.2')
        .from('.btn-line-main', {
            duration: 0.8,
            scale: 0,
            opacity: 0,
            ease: 'back.out(1.7)'
        }, '-=0.2');
    
    // „Éí„Éº„É≠„ÉºÁîªÂÉè„ÅÆ„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥
    gsap.from('.hero-img', {
        duration: 1.2,
        scale: 0.8,
        opacity: 0,
        rotation: -10,
        ease: 'power3.out',
        delay: 0.5
    });
    
    // „Éá„Ç≥„É¨„Éº„Ç∑„Éß„É≥„Ç¢„Ç§„ÉÜ„É†„ÅÆ„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥
    gsap.utils.toArray('.decoration-item').forEach((item, index) => {
        gsap.fromTo(item, {
            y: 100,
            opacity: 0,
            scale: 0
        }, {
            y: 0,
            opacity: 1,
            scale: 1,
            duration: 1,
            delay: 1 + index * 0.2,
            ease: 'bounce.out'
        });
    });
    
    // „Çª„ÇØ„Ç∑„Éß„É≥„Çø„Ç§„Éà„É´„ÅÆ„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥
    gsap.utils.toArray('.section-title').forEach(title => {
        gsap.fromTo(title, {
            y: 50,
            opacity: 0
        }, {
            y: 0,
            opacity: 1,
            duration: 1,
            ease: 'power3.out',
            scrollTrigger: {
                trigger: title,
                start: 'top 80%',
                end: 'bottom 20%',
                toggleActions: 'play none none reverse'
            }
        });
    });
    
    // „Ç´„Éº„Éâ„Ç¢„Ç§„ÉÜ„É†„ÅÆ„Çπ„Çø„ÉÉ„Ç¨„Éº„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥
    gsap.utils.toArray('.benefit-card, .voice-card, .step-item').forEach((card, index) => {
        gsap.fromTo(card, {
            y: 100,
            opacity: 0,
            scale: 0.8
        }, {
            y: 0,
            opacity: 1,
            scale: 1,
            duration: 0.8,
            delay: index * 0.1,
            ease: 'power3.out',
            scrollTrigger: {
                trigger: card,
                start: 'top 80%',
                end: 'bottom 20%',
                toggleActions: 'play none none reverse'
            }
        });
    });
    
    // ÊúÄÁµÇCTA„Çª„ÇØ„Ç∑„Éß„É≥„ÅÆ„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥
    gsap.fromTo('.final-cta-content', {
        scale: 0.8,
        opacity: 0
    }, {
        scale: 1,
        opacity: 1,
        duration: 1.2,
        ease: 'power3.out',
        scrollTrigger: {
            trigger: '.final-cta-section',
            start: 'top 80%',
            end: 'bottom 20%',
            toggleActions: 'play none none reverse'
        }
    });
    
    console.log('‚ú® GSAP „Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥„ÅåÂàùÊúüÂåñ„Åï„Çå„Åæ„Åó„Åü');
}

/**
 * Swiper „Çπ„É©„Ç§„ÉÄ„Éº„ÅÆË®≠ÂÆö
 */
function setupSwiperSliders() {
    // ÁâπÂÖ∏„Çπ„É©„Ç§„ÉÄ„Éº
    const benefitsSwiper = new Swiper('.benefits-swiper', {
        slidesPerView: 1,
        spaceBetween: 20,
        loop: true,
        autoplay: {
            delay: 4000,
            disableOnInteraction: false
        },
        pagination: {
            el: '.benefits-swiper .swiper-pagination',
            clickable: true
        },
        breakpoints: {
            768: {
                slidesPerView: 2,
                spaceBetween: 30
            },
            1024: {
                slidesPerView: 3,
                spaceBetween: 40
            }
        },
        effect: 'slide',
        speed: 800
    });
    
    // „ÅäÂÆ¢Êßò„ÅÆÂ£∞„Çπ„É©„Ç§„ÉÄ„Éº
    const voiceSwiper = new Swiper('.voice-swiper', {
        slidesPerView: 1,
        spaceBetween: 30,
        loop: true,
        autoplay: {
            delay: 5000,
            disableOnInteraction: false
        },
        pagination: {
            el: '.voice-swiper .swiper-pagination',
            clickable: true
        },
        breakpoints: {
            768: {
                slidesPerView: 2,
                spaceBetween: 40
            },
            1024: {
                slidesPerView: 3,
                spaceBetween: 50
            }
        },
        effect: 'coverflow',
        coverflowEffect: {
            rotate: 20,
            stretch: 0,
            depth: 100,
            modifier: 1,
            slideShadows: true
        },
        speed: 1000
    });
    
    console.log('üé† Swiper„Çπ„É©„Ç§„ÉÄ„Éº„ÅåÂàùÊúüÂåñ„Åï„Çå„Åæ„Åó„Åü');
}

/**
 * „Çø„ÉñÂàá„ÇäÊõø„ÅàÊ©üËÉΩ
 */
function setupTabSwitching() {
    const tabButtons = document.querySelectorAll('.tab-btn');
    const tabContents = document.querySelectorAll('.tab-content');
    
    tabButtons.forEach(button => {
        button.addEventListener('click', function() {
            const targetTab = this.dataset.tab;
            
            // „Ç¢„ÇØ„ÉÜ„Ç£„Éñ„ÇØ„É©„Çπ„ÅÆÂàá„ÇäÊõø„Åà
            tabButtons.forEach(btn => btn.classList.remove('active'));
            this.classList.add('active');
            
            // „Çø„Éñ„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÅÆÂàá„ÇäÊõø„Åà
            tabContents.forEach(content => {
                content.classList.remove('active');
                if (content.id === `${targetTab}-tab`) {
                    content.classList.add('active');
                    
                    // „Çø„ÉñÂàá„ÇäÊõø„ÅàÊôÇ„ÅÆ„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥
                    gsap.fromTo(content, {
                        opacity: 0,
                        y: 20
                    }, {
                        opacity: 1,
                        y: 0,
                        duration: 0.5,
                        ease: 'power2.out'
                    });
                }
            });
            
            // „Éú„Çø„É≥„ÇØ„É™„ÉÉ„ÇØÊôÇ„ÅÆ„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥
            gsap.to(this, {
                duration: 0.2,
                scale: 0.95,
                yoyo: true,
                repeat: 1,
                ease: 'power2.inOut'
            });
        });
    });
    
    console.log('üîÑ „Çø„ÉñÂàá„ÇäÊõø„ÅàÊ©üËÉΩ„ÅåÂàùÊúüÂåñ„Åï„Çå„Åæ„Åó„Åü');
}

/**
 * FAQ „Ç¢„Ç≥„Éº„Éá„Ç£„Ç™„É≥Ê©üËÉΩ
 */
function setupFAQAccordion() {
    const faqItems = document.querySelectorAll('.faq-item');
    
    faqItems.forEach(item => {
        const question = item.querySelector('.faq-question');
        const answer = item.querySelector('.faq-answer');
        
        if (!question || !answer) return;
        
        question.addEventListener('click', function() {
            const isActive = item.classList.contains('active');
            
            // ‰ªñ„ÅÆFAQ„Ç¢„Ç§„ÉÜ„É†„ÇíÈñâ„Åò„Çã
            faqItems.forEach(faq => {
                if (faq !== item) {
                    faq.classList.remove('active');
                    const otherAnswer = faq.querySelector('.faq-answer');
                    if (otherAnswer) {
                        gsap.to(otherAnswer, {
                            duration: 0.3,
                            height: 0,
                            paddingTop: 0,
                            paddingBottom: 0,
                            ease: 'power2.inOut'
                        });
                    }
                }
            });
            
            // „ÇØ„É™„ÉÉ„ÇØ„Åï„Çå„Åü„Ç¢„Ç§„ÉÜ„É†„ÅÆÈñãÈñâ
            if (!isActive) {
                item.classList.add('active');
                
                // Èñã„Åè„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥
                gsap.fromTo(answer, {
                    height: 0,
                    paddingTop: 0,
                    paddingBottom: 0
                }, {
                    height: 'auto',
                    paddingTop: '0px',
                    paddingBottom: '1.5rem',
                    duration: 0.5,
                    ease: 'power2.out'
                });
                
                // ÂÜÖÂÆπ„ÅÆ„Éï„Çß„Éº„Éâ„Ç§„É≥
                gsap.fromTo(answer.querySelector('p'), {
                    opacity: 0,
                    y: 10
                }, {
                    opacity: 1,
                    y: 0,
                    duration: 0.3,
                    delay: 0.2,
                    ease: 'power2.out'
                });
            } else {
                item.classList.remove('active');
                
                // Èñâ„Åò„Çã„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥
                gsap.to(answer, {
                    duration: 0.3,
                    height: 0,
                    paddingTop: 0,
                    paddingBottom: 0,
                    ease: 'power2.inOut'
                });
            }
            
            // Ë≥™Âïè„Éú„Çø„É≥„ÅÆ„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥
            gsap.to(question, {
                duration: 0.2,
                scale: 0.98,
                yoyo: true,
                repeat: 1,
                ease: 'power2.inOut'
            });
        });
    });
    
    console.log('‚ùì FAQ „Ç¢„Ç≥„Éº„Éá„Ç£„Ç™„É≥„ÅåÂàùÊúüÂåñ„Åï„Çå„Åæ„Åó„Åü');
}

/**
 * „Çπ„É†„Éº„Çπ„Çπ„ÇØ„É≠„Éº„É´Ê©üËÉΩ
 */
function setupSmoothScroll() {
    const links = document.querySelectorAll('a[href^="#"]');
    
    links.forEach(link => {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            
            const targetId = this.getAttribute('href');
            const targetElement = document.querySelector(targetId);
            
            if (targetElement) {
                const headerHeight = document.querySelector('.header').offsetHeight;
                const offsetTop = targetElement.offsetTop - headerHeight - 20;
                
                // GSAP„Åß„Çπ„É†„Éº„Çπ„Çπ„ÇØ„É≠„Éº„É´
                gsap.to(window, {
                    duration: 1.5,
                    scrollTo: {
                        y: offsetTop,
                        autoKill: true
                    },
                    ease: 'power2.inOut'
                });
                
                // „ÇØ„É™„ÉÉ„ÇØÊôÇ„ÅÆ„Éú„Çø„É≥„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥
                gsap.to(this, {
                    duration: 0.2,
                    scale: 0.95,
                    yoyo: true,
                    repeat: 1,
                    ease: 'power2.inOut'
                });
            }
        });
    });
    
    console.log('üîÑ „Çπ„É†„Éº„Çπ„Çπ„ÇØ„É≠„Éº„É´„ÅåÂàùÊúüÂåñ„Åï„Çå„Åæ„Åó„Åü');
}

/**
 * „Çπ„ÇØ„É≠„Éº„É´ÈÄ£Âãï„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥
 */
function setupScrollAnimations() {
    // „Éò„ÉÉ„ÉÄ„Éº„ÅÆËÉåÊôØÂ§âÂåñ
    ScrollTrigger.create({
        start: 'top -80',
        end: 99999,
        toggleClass: {
            className: 'scrolled',
            targets: '.header'
        }
    });
    
    // ËÉåÊôØ„ÅÆÊ≥°„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥
    gsap.utils.toArray('.bubble').forEach((bubble, index) => {
        gsap.to(bubble, {
            y: -200,
            rotation: 360,
            duration: 8 + index * 2,
            repeat: -1,
            ease: 'none',
            yoyo: true
        });
    });
    
    // „Éë„Éº„ÉÜ„Ç£„ÇØ„É´„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥
    gsap.utils.toArray('.particle').forEach((particle, index) => {
        gsap.to(particle, {
            y: -window.innerHeight - 100,
            duration: 8,
            repeat: -1,
            delay: index * 2,
            ease: 'none'
        });
    });
    
    console.log('üåü „Çπ„ÇØ„É≠„Éº„É´„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥„ÅåÂàùÊúüÂåñ„Åï„Çå„Åæ„Åó„Åü');
}

/**
 * „Éõ„Éê„Éº„Ç®„Éï„Çß„ÇØ„Éà
 */
function setupHoverEffects() {
    // „Ç´„Éº„Éâ„Éõ„Éê„Éº„Ç®„Éï„Çß„ÇØ„Éà
    const cards = document.querySelectorAll('.benefit-card, .voice-card, .step-item');
    
    cards.forEach(card => {
        card.addEventListener('mouseenter', function() {
            gsap.to(this, {
                duration: 0.3,
                y: -10,
                scale: 1.02,
                ease: 'power2.out'
            });
        });
        
        card.addEventListener('mouseleave', function() {
            gsap.to(this, {
                duration: 0.3,
                y: 0,
                scale: 1,
                ease: 'power2.out'
            });
        });
    });
    
    // „Éú„Çø„É≥„Éõ„Éê„Éº„Ç®„Éï„Çß„ÇØ„Éà
    const buttons = document.querySelectorAll('.btn-line-main, .btn-line-section, .btn-line-final');
    
    buttons.forEach(button => {
        button.addEventListener('mouseenter', function() {
            gsap.to(this, {
                duration: 0.3,
                scale: 1.05,
                ease: 'power2.out'
            });
            
            // „Ç¢„Ç§„Ç≥„É≥„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥
            const icon = this.querySelector('.btn-icon');
            if (icon) {
                gsap.to(icon, {
                    duration: 0.5,
                    rotation: 360,
                    ease: 'power2.out'
                });
            }
        });
        
        button.addEventListener('mouseleave', function() {
            gsap.to(this, {
                duration: 0.3,
                scale: 1,
                ease: 'power2.out'
            });
        });
    });
    
    // „Éï„Ç£„Éº„ÉÅ„É£„Éº„Ç¢„Ç§„ÉÜ„É†„ÅÆ„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥
    const features = document.querySelectorAll('.feature-item');
    
    features.forEach(feature => {
        feature.addEventListener('mouseenter', function() {
            const icon = this.querySelector('.feature-icon');
            gsap.to(icon, {
                duration: 0.5,
                scale: 1.2,
                rotation: 15,
                ease: 'power2.out'
            });
        });
        
        feature.addEventListener('mouseleave', function() {
            const icon = this.querySelector('.feature-icon');
            gsap.to(icon, {
                duration: 0.5,
                scale: 1,
                rotation: 0,
                ease: 'power2.out'
            });
        });
    });
    
    console.log('‚ú® „Éõ„Éê„Éº„Ç®„Éï„Çß„ÇØ„Éà„ÅåÂàùÊúüÂåñ„Åï„Çå„Åæ„Åó„Åü');
}

/**
 * Âõ∫ÂÆöCTA„ÅÆÂà∂Âæ°
 */
function setupFixedCTA() {
    const fixedCTA = document.querySelector('.fixed-cta');
    const heroSection = document.querySelector('.hero');
    
    if (!fixedCTA || !heroSection) return;
    
    // ÂàùÊúüÁä∂ÊÖã
    gsap.set(fixedCTA, {
        y: 100,
        opacity: 0
    });
    
    // „Çπ„ÇØ„É≠„Éº„É´‰ΩçÁΩÆ„Å´Âøú„Åò„Å¶Ë°®Á§∫Âà∂Âæ°
    ScrollTrigger.create({
        trigger: heroSection,
        start: 'bottom center',
        end: 'bottom top',
        onEnter: () => {
            gsap.to(fixedCTA, {
                duration: 0.5,
                y: 0,
                opacity: 1,
                ease: 'back.out(1.7)'
            });
        },
        onLeaveBack: () => {
            gsap.to(fixedCTA, {
                duration: 0.3,
                y: 100,
                opacity: 0,
                ease: 'power2.in'
            });
        }
    });
    
    // Âõ∫ÂÆöCTA„Éú„Çø„É≥„ÅÆÂ∏∏ÊôÇ„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥
    gsap.to(fixedCTA, {
        duration: 2,
        y: -5,
        repeat: -1,
        yoyo: true,
        ease: 'power2.inOut'
    });
    
    console.log('üì± Âõ∫ÂÆöCTA„ÅåÂàùÊúüÂåñ„Åï„Çå„Åæ„Åó„Åü');
}

/**
 * „Éë„É©„É©„ÉÉ„ÇØ„ÇπÂäπÊûú
 */
function setupParallaxEffects() {
    // „Éí„Éº„É≠„ÉºÁîªÂÉè„ÅÆ„Éë„É©„É©„ÉÉ„ÇØ„Çπ
    const heroImage = document.querySelector('.hero-img');
    
    if (heroImage) {
        gsap.to(heroImage, {
            yPercent: -30,
            ease: 'none',
            scrollTrigger: {
                trigger: '.hero',
                start: 'top bottom',
                end: 'bottom top',
                scrub: true
            }
        });
    }
    
    // „Éá„Ç≥„É¨„Éº„Ç∑„Éß„É≥„Ç¢„Ç§„ÉÜ„É†„ÅÆ„Éë„É©„É©„ÉÉ„ÇØ„Çπ
    gsap.utils.toArray('.decoration-item').forEach((item, index) => {
        gsap.to(item, {
            yPercent: -50 - (index * 20),
            ease: 'none',
            scrollTrigger: {
                trigger: '.hero',
                start: 'top bottom',
                end: 'bottom top',
                scrub: true
            }
        });
    });
    
    console.log('üåä „Éë„É©„É©„ÉÉ„ÇØ„ÇπÂäπÊûú„ÅåÂàùÊúüÂåñ„Åï„Çå„Åæ„Åó„Åü');
}

/**
 * ÁâπÂà•„Å™„Ç§„Éô„É≥„Éà„Éè„É≥„Éâ„É©„Éº
 */
function setupSpecialEffects() {
    // LINE„Éú„Çø„É≥„ÇØ„É™„ÉÉ„ÇØÊôÇ„ÅÆÁâπÂà•„Ç®„Éï„Çß„ÇØ„Éà
    const lineButtons = document.querySelectorAll('[href*="line"], .btn-line-main, .btn-line-section, .btn-line-final');
    
    lineButtons.forEach(button => {
        button.addEventListener('click', function(e) {
            // Á¥ôÂêπÈõ™„Ç®„Éï„Çß„ÇØ„Éà
            createConfetti(this);
            
            // „Éú„Çø„É≥„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥
            gsap.to(this, {
                duration: 0.2,
                scale: 0.9,
                yoyo: true,
                repeat: 3,
                ease: 'power2.inOut'
            });
        });
    });
    
    function createConfetti(element) {
        const rect = element.getBoundingClientRect();
        const centerX = rect.left + rect.width / 2;
        const centerY = rect.top + rect.height / 2;
        
        for (let i = 0; i < 20; i++) {
            const confetti = document.createElement('div');
            confetti.style.cssText = `
                position: fixed;
                width: 8px;
                height: 8px;
                background: ${['#00C300', '#FFEB3B', '#42A5F5'][Math.floor(Math.random() * 3)]};
                border-radius: 50%;
                pointer-events: none;
                z-index: 9999;
                left: ${centerX}px;
                top: ${centerY}px;
            `;
            
            document.body.appendChild(confetti);
            
            gsap.to(confetti, {
                duration: 1,
                x: (Math.random() - 0.5) * 200,
                y: (Math.random() - 0.5) * 200,
                rotation: Math.random() * 360,
                scale: 0,
                ease: 'power2.out',
                onComplete: () => {
                    confetti.remove();
                }
            });
        }
    }
}

/**
 * „Éë„Éï„Ç©„Éº„Éû„É≥„ÇπÁõ£Ë¶ñ
 */
function monitorPerformance() {
    // FPSÁõ£Ë¶ñ
    let fps = 0;
    let lastTime = performance.now();
    
    function calculateFPS() {
        const currentTime = performance.now();
        fps = Math.round(1000 / (currentTime - lastTime));
        lastTime = currentTime;
        
        requestAnimationFrame(calculateFPS);
    }
    
    calculateFPS();
    
    // 5Áßí„Åî„Å®„Å´„Éë„Éï„Ç©„Éº„Éû„É≥„ÇπÊÉÖÂ†±„Çí„É≠„Ç∞Âá∫Âäõ
    setInterval(() => {
        console.log(`üìä FPS: ${fps}, „É°„É¢„É™‰ΩøÁî®Èáè: ${(performance.memory?.usedJSHeapSize / 1024 / 1024).toFixed(2)}MB`);
    }, 5000);
}

/**
 * „Ç®„É©„Éº„Éè„É≥„Éâ„É™„É≥„Ç∞
 */
function handleError(error) {
    console.error('üö® „Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü:', error);
}

/**
 * „É¶„Éº„ÉÜ„Ç£„É™„ÉÜ„Ç£Èñ¢Êï∞ÔºöË¶ÅÁ¥†„ÅÆÂ≠òÂú®Á¢∫Ë™ç
 */
function elementExists(selector) {
    return document.querySelector(selector) !== null;
}

/**
 * „É¶„Éº„ÉÜ„Ç£„É™„ÉÜ„Ç£Èñ¢Êï∞Ôºö„Éá„Éê„Ç¶„É≥„Çπ
 */
function debounce(func, wait) {
    let timeout;
    return function executedFunction(...args) {
        const later = () => {
            clearTimeout(timeout);
            func(...args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
    };
}

// ÂàùÊúüÂåñÂæå„ÅÆËøΩÂä†Âá¶ÁêÜ
window.addEventListener('load', function() {
    setupSpecialEffects();
    setupScrollAnimations();
    
    // ÈñãÁô∫Áí∞Â¢É„Åß„ÅÆ„Éë„Éï„Ç©„Éº„Éû„É≥„ÇπÁõ£Ë¶ñ
    if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {
        monitorPerformance();
        console.log('üîß „Éá„Éê„ÉÉ„Ç∞„É¢„Éº„Éâ„ÅßÂãï‰Ωú‰∏≠');
    }
    
    console.log('üéä ÂÖ®„Å¶„ÅÆÊ©üËÉΩ„ÅåÂàùÊúüÂåñ„Åï„Çå„Åæ„Åó„ÅüÔºÅ');
});

// „É™„Çµ„Ç§„Ç∫„Ç§„Éô„É≥„Éà„ÅÆ„Éá„Éê„Ç¶„É≥„ÇπÂá¶ÁêÜ
window.addEventListener('resize', debounce(function() {
    ScrollTrigger.refresh();
    console.log('üì± ÁîªÈù¢„Çµ„Ç§„Ç∫„ÅåÂ§âÊõ¥„Åï„Çå„Åæ„Åó„Åü');
}, 250));

// „Ç®„É©„Éº„Ç§„Éô„É≥„Éà„ÅÆÁõ£Ë¶ñ
window.addEventListener('error', handleError);
window.addEventListener('unhandledrejection', handleError);